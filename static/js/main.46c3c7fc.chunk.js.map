{"version":3,"sources":["actions/actionType.js","components/AddTask.js","components/Task.js","components/Tasks.js","App.js","reducers/todo.js","reducers/index.js","store.js","index.js"],"names":["TASK_ADDED","TASK_REMOVED","TASK_TOGGLE","AddTask","title","useRef","desc","dispatch","useDispatch","className","ref","type","placeholder","onClick","current","value","payload","alert","Task","task","onEdit","onDelete","onToggle","status","onDoubleClick","id","style","color","Tasks","tasks","useSelector","state","todo","length","map","App","lastId","combineReducers","action","actions","filter","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAAaA,EAAa,aACbC,EAAe,eACfC,EAAc,c,OCoCZC,EAlCC,WACd,IAAMC,EAAQC,mBACRC,EAAOD,mBACPE,EAAWC,cAcjB,OACE,qBAAKC,UAAU,WAAf,SACE,sBAAKA,UAAU,eAAf,UACE,gCACE,uBAAOA,UAAU,aAAjB,mBACA,uBAAOC,IAAKN,EAAOO,KAAK,OAAOC,YAAY,aAE7C,gCACE,uBAAOH,UAAU,aAAjB,yBACA,0BAAUC,IAAKJ,EAAMM,YAAY,8BAEnC,wBAAQH,UAAU,kBAAkBI,QAxBpB,WACfT,EAAMU,QAAQC,OAInBR,EAAS,CACPI,KAAMX,EACNgB,QAAS,CAAEZ,MAAOA,EAAMU,QAAQC,MAAOT,KAAMA,EAAKQ,QAAQC,SAG5DX,EAAMU,QAAQC,MAAQ,GACtBT,EAAKQ,QAAQC,MAAQ,IATnBE,MAAM,qBAsBwDN,KAAK,SAAjE,uBCfOO,EAjBF,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACtC,OACE,sBAAKb,UAAS,eAAUU,EAAKI,OAAS,SAAW,IAC/CC,cAAe,kBAAMF,EAASH,EAAKM,KADrC,UAGE,uBAAOd,KAAK,aACZ,6BAAKQ,EAAKf,QACV,4BAAIe,EAAKb,OACT,wBAAQO,QAAS,kBAAMO,EAAOD,EAAKM,KAAnC,kBACA,sBACEZ,QAAS,kBAAMQ,EAASF,EAAKM,KAC7BC,MAAO,CAAEC,MAAO,OAFlB,mBCwBSC,EA7BD,WACZ,IAAMC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QACnCzB,EAAWC,cAEXc,EAAW,SAAAG,GACflB,EAAS,CACPI,KAAMT,EACNc,QAAS,CAAES,GAAIA,MAGbJ,EAAW,SAAAI,GACflB,EAAS,CACPI,KAAMV,EACNe,QAAS,CAAES,GAAIA,MAGnB,OACE,mCACGI,EAAMI,OAAS,EACdJ,EAAMK,KAAI,SAAAf,GAAI,OACZ,cAAC,EAAD,CAAoBA,KAAMA,EAAME,SAAUA,EAAUC,SAAUA,GAAnDH,EAAKM,OAGlB,sBCdOU,EAVH,WACV,OACE,sBAAK1B,UAAU,YAAf,UACE,oBAAIA,UAAU,SAAd,sBACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,sBCNF2B,EAAS,ECCEC,kBAAgB,CAACL,KDCjB,WAA0C,IAArBD,EAAoB,uDAAZ,GAAIO,EAAQ,uCACtD,OAAQA,EAAO3B,MACb,KAAK4B,EACH,MAAM,GAAN,mBACKR,GADL,CAEE,CACEN,KAAMW,EACNhC,MAAOkC,EAAOtB,QAAQZ,MACtBE,KAAMgC,EAAOtB,QAAQV,KACrBiB,QAAQ,KAGd,KAAKgB,EACH,OAAOR,EAAMS,QAAO,SAAArB,GAAI,OAAIA,EAAKM,KAAOa,EAAOtB,QAAQS,MACzD,KAAKc,EACH,OAAOR,EAAMG,KAAI,SAACf,GAAD,OAAUA,EAAKM,KAAOa,EAAOtB,QAAQS,GAA3B,2BAAqCN,GAArC,IAA2CI,QAASJ,EAAKI,SAAWJ,KACjG,QACE,OAAOY,MEdEU,EAJAC,YAAYC,EACvBC,OAAOC,8BAAgCD,OAAOC,gCCKlDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACA,cAAC,EAAD,QAGFQ,SAASC,eAAe,W","file":"static/js/main.46c3c7fc.chunk.js","sourcesContent":["export const TASK_ADDED = 'todo/added';\r\nexport const TASK_REMOVED = 'todo/removed';\r\nexport const TASK_TOGGLE = 'todo/toggle';\r\n","import { useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { TASK_ADDED } from '../actions/actionType';\r\n\r\nconst AddTask = () => {\r\n  const title = useRef();\r\n  const desc = useRef();\r\n  const dispatch = useDispatch();\r\n  const onButtonClick = () => {\r\n    if (!title.current.value) {\r\n      alert(\"please add title\")\r\n      return\r\n    }\r\n    dispatch({\r\n      type: TASK_ADDED,\r\n      payload: { title: title.current.value, desc: desc.current.value }\r\n    });\r\n    // Clear form\r\n    title.current.value = '';\r\n    desc.current.value = '';\r\n  }\r\n  return (\r\n    <div className=\"add-form\">\r\n      <div className=\"form-control\">\r\n        <div>\r\n          <label className=\"form-label\">Title</label>\r\n          <input ref={title} type=\"text\" placeholder=\"Title\" />\r\n        </div>\r\n        <div>\r\n          <label className=\"form-label\">Description</label>\r\n          <textarea ref={desc} placeholder=\"description (optional)\" />\r\n        </div>\r\n        <button className=\"btn btn-success\" onClick={onButtonClick} type=\"submit\">Add</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTask;\r\n","const Task = ({ task, onEdit, onDelete, onToggle }) => {\r\n  return (\r\n    <div className={`task ${task.status ? 'status' : ''}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <input type=\"checkbox\" />\r\n      <h3>{task.title}</h3>\r\n      <p>{task.desc}</p>\r\n      <button onClick={() => onEdit(task.id)}>Edit</button>\r\n      <span\r\n        onClick={() => onDelete(task.id)}\r\n        style={{ color: 'red' }}>X\r\n        </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import Task from './Task';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TASK_REMOVED, TASK_TOGGLE } from \"../actions/actionType\";\r\n\r\nconst Tasks = () => {\r\n  const tasks = useSelector(state => state.todo);\r\n  const dispatch = useDispatch();\r\n\r\n  const onToggle = id => {\r\n    dispatch({\r\n      type: TASK_TOGGLE,\r\n      payload: { id: id }\r\n    });\r\n  };\r\n  const onDelete = id => {\r\n    dispatch({\r\n      type: TASK_REMOVED,\r\n      payload: { id: id }\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {tasks.length > 0 ? (\r\n        tasks.map(task => (\r\n          <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n        ))\r\n      ) : (\r\n        \"No Tasks to show\"\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks;\r\n","import AddTask from './components/AddTask';\r\nimport Tasks from './components/Tasks';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"header\">Todo App</h1>\r\n      <AddTask />\r\n      <Tasks />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import * as actions from \"../actions/actionType\";\r\n\r\nlet lastId = 0;\r\n\r\nexport default function todoReducer(state = [], action) {\r\n  switch (action.type) {\r\n    case actions.TASK_ADDED:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: ++lastId,\r\n          title: action.payload.title,\r\n          desc: action.payload.desc,\r\n          status: false\r\n        }\r\n      ];\r\n    case actions.TASK_REMOVED:\r\n      return state.filter(task => task.id !== action.payload.id);\r\n    case actions.TASK_TOGGLE:\r\n      return state.map((task) => task.id === action.payload.id ? { ...task, status: !task.status } : task);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport todo from './todo';\r\n\r\nexport default combineReducers({todo});","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store  = createStore(rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}