{"version":3,"sources":["contexts/AuthContext.js","components/PrivateRoute.js","components/SignIn.js","components/SignUp.js","actions/actionType.js","components/AddTask.js","components/Task.js","components/Tasks.js","components/Dash.js","App.js","reducers/index.js","reducers/todo.js","store.js","index.js","DBConfig.js"],"names":["authContext","createContext","AuthProvider","children","useState","loading","data","auth","setAuth","useEffect","JSON","parse","window","localStorage","getItem","setItem","stringify","Provider","value","setAuthData","PrivateRoute","Component","component","rest","useContext","render","routeProps","to","SignIn","history","userName","setuserName","password","setPassword","useIndexedDB","add","getByIndex","addDefaultUsers","name","pass","obj","then","event","console","log","error","className","style","textAlign","onSubmit","e","preventDefault","userDetails","replace","type","placeholder","onChange","target","href","SignUp","TASK_ADDED","TASK_REMOVED","TASK_TOGGLE","TASK_POPULATE","AddTask","title","useRef","desc","dispatch","useDispatch","ref","onClick","current","t","d","status","personId","payload","id","alert","Task","task","onEdit","onDelete","onToggle","onDoubleClick","defaultChecked","color","Tasks","getAll","update","deleteRecord","tasks","useSelector","state","todo","allTasks","filter","currentTask","length","map","Dash","App","path","from","combineReducers","action","actions","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","initDB","version","objectStoresMeta","storeConfig","keyPath","autoIncrement","storeSchema","keypath","options","unique","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f849889.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const authContext = createContext({});\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [auth, setAuth] = useState({ loading: true, data: null });\r\n\r\n  const setAuthData = (data) => {\r\n    setAuth({data: data});\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAuth({ loading: false, data: JSON.parse(window.localStorage.getItem('authData'))});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('authData', JSON.stringify(auth.data));\r\n  }, [auth.data]);\r\n\r\n  return (\r\n    <authContext.Provider value={{ auth, setAuthData }}>\r\n      {children}\r\n    </authContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authContext } from '../contexts/AuthContext';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { auth } = useContext(authContext);\r\n  const { loading } = auth;\r\n\r\n  if (loading) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() => {\r\n          return <p>Loading...</p>;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps => {\r\n        return auth.data ? (\r\n          <Component {...routeProps} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { authContext } from \"../contexts/AuthContext\";\r\nimport { useIndexedDB } from 'react-indexed-db';\r\n\r\nconst SignIn = ({ history }) => {\r\n  const [userName, setuserName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const { setAuthData } = useContext(authContext);\r\n  const { add, getByIndex } = useIndexedDB('people');\r\n\r\n  useEffect(() => {\r\n    // set 3 default users\r\n    if(!window.localStorage.getItem('addedDefaultUsers')) {\r\n      addDefaultUsers({ name: 'user1', pass: '123456' });\r\n      addDefaultUsers({ name: 'user2', pass: '123456' });\r\n      addDefaultUsers({ name: 'user3', pass: '123456' });\r\n      window.localStorage.setItem('addedDefaultUsers', true)\r\n    }\r\n  }, []);\r\n\r\n  const addDefaultUsers = (obj) => {\r\n    add(obj).then(\r\n      event => {\r\n        console.log('ID Generated: ', event);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  };\r\n\r\n  const onFormSubmit = e => {\r\n    e.preventDefault();\r\n    // fetch and check credentials\r\n    if (userName && password) {\r\n      getByIndex('name', userName).then(userDetails => {\r\n        console.log(userDetails);\r\n        if (userDetails && userDetails.pass === password) {\r\n          setAuthData(userName);\r\n          history.replace('/app');\r\n        } else {\r\n          console.error('Incorrect credectials')\r\n        }\r\n      });\r\n    } else {\r\n      console.error('Empty credectials')\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"add-form\">\r\n        <div className=\"form-control\">\r\n          <h1 style={{textAlign: \"center\"}} >Login</h1>\r\n          <form onSubmit={onFormSubmit}>\r\n            <label>Username</label>\r\n            <input type=\"text\" placeholder=\"Enter Username\"\r\n              onChange={e => {\r\n                setuserName(e.target.value);\r\n              }}\r\n            />\r\n            <label>Password</label>\r\n            <input type=\"password\" placeholder=\"Password\"\r\n              onChange={e => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n            <button type=\"submit\" className=\"btn btn-success\" >\r\n              Sign in\r\n              </button>\r\n          </form>\r\n        </div>\r\n        <a href=\"#/signup\">Register</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useState } from 'react';\r\nimport { useIndexedDB } from 'react-indexed-db';\r\n\r\nconst SignUp = ({ history }) => {\r\n  const [userName, setuserName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const { add } = useIndexedDB('people');\r\n\r\n  const onFormSubmit = e => {\r\n    e.preventDefault();\r\n    // add credentials\r\n    if (userName && password ) {\r\n      add({ name: userName, pass: password }).then(\r\n        event => {\r\n          console.log('User Added: ', event);\r\n          history.replace('/signin');\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      );      \r\n    } else {\r\n      console.error('Empty credectials')\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"add-form\">\r\n        <div className=\"form-control\">\r\n          <h1  style={{textAlign: \"center\"}} >Register</h1>\r\n          <form onSubmit={onFormSubmit}>\r\n            <label>Username</label>\r\n            <input type=\"text\" placeholder=\"Enter Username\"\r\n              onChange={e => {\r\n                setuserName(e.target.value);\r\n              }}\r\n            />\r\n            <label>Password</label>\r\n            <input type=\"password\" placeholder=\"Password\"\r\n              onChange={e => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n            <button type=\"submit\" className=\"btn btn-success\" >\r\n              Sign Up\r\n              </button>\r\n          </form>\r\n        </div>\r\n        <a href=\"#/signin\">Login</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","export const TASK_ADDED = 'todo/added';\r\nexport const TASK_REMOVED = 'todo/removed';\r\nexport const TASK_TOGGLE = 'todo/toggle';\r\nexport const TASK_POPULATE = 'todo/populate';\r\n","import { useRef, useContext } from 'react';\r\nimport { useIndexedDB } from 'react-indexed-db';\r\nimport { useDispatch } from 'react-redux';\r\nimport { TASK_ADDED } from '../actions/actionType';\r\nimport { authContext } from '../contexts/AuthContext';\r\n\r\nconst AddTask = () => {\r\n  const title = useRef();\r\n  const desc = useRef();\r\n  const dispatch = useDispatch();\r\n  const { add } = useIndexedDB('task');\r\n  const { auth } = useContext(authContext);\r\n\r\n  // insert task to database and redux\r\n  const onButtonClick = () => {\r\n    if (!title.current.value) {\r\n      alert(\"please add title\")\r\n      return\r\n    }\r\n    const t = title.current.value;\r\n    const d = desc.current.value;\r\n\r\n    add({ title: t, desc: d,  status: false, personId: auth.data }).then(\r\n      event => {\r\n        // inserted task id\r\n        console.log('ID Generated: ', event);\r\n        dispatch({\r\n          type: TASK_ADDED,\r\n          payload: { id: event, title: t, desc: d }\r\n        });\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n    // Clear form\r\n    title.current.value = '';\r\n    desc.current.value = '';\r\n  }\r\n  return (\r\n    <div className=\"add-form\">\r\n      <div className=\"form-control\">\r\n        <div>\r\n          <label className=\"form-label\">Title</label>\r\n          <input ref={title} type=\"text\" placeholder=\"Title\" />\r\n        </div>\r\n        <div>\r\n          <label className=\"form-label\">Description</label>\r\n          <textarea ref={desc} placeholder=\"description (optional)\" />\r\n        </div>\r\n        <button className=\"btn btn-success\" onClick={onButtonClick} type=\"submit\">Add</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTask;\r\n","const Task = ({ task, onEdit, onDelete, onToggle }) => {\r\n  return (\r\n    <div className={`task ${task.status ? 'status' : ''}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <input type=\"checkbox\" onChange={() => onToggle(task.id)} defaultChecked={`${task.status ? 'checked' : ''}`} />\r\n      <h3>{task.title}</h3>\r\n      <p>{task.desc}</p>\r\n      <button onClick={() => onEdit(task.id)}>Edit</button>\r\n      <span\r\n        onClick={() => onDelete(task.id)}\r\n        style={{ color: 'red' }}>X\r\n        </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import Task from './Task';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TASK_REMOVED, TASK_TOGGLE, TASK_POPULATE } from \"../actions/actionType\";\r\nimport { useEffect, useContext } from 'react';\r\nimport { useIndexedDB } from 'react-indexed-db';\r\nimport { authContext } from '../contexts/AuthContext';\r\n\r\n\r\nconst Tasks = () => {\r\n  const { getAll, update, deleteRecord } = useIndexedDB('task');\r\n  const tasks = useSelector(state => state.todo);\r\n  const { auth } = useContext(authContext);\r\n  const dispatch = useDispatch();\r\n\r\n  // get todos from db and populate in state\r\n  useEffect(() => {\r\n    getAll().then(\r\n      allTasks => {\r\n        const data = allTasks.filter(task => task.personId === auth.data)\r\n        dispatch({\r\n          type: TASK_POPULATE,\r\n          payload: data\r\n        });\r\n      console.log(data);\r\n    },\r\n    error => {\r\n      console.log(error)\r\n    });\r\n  },[]);\r\n  \r\n// toggle task status\r\n  const onToggle = id => {\r\n    let currentTask = tasks.filter(task => task.id === id )\r\n    currentTask = currentTask[0]\r\n    console.log(currentTask);\r\n    update({ ...currentTask, status: !currentTask.status, personId: auth.data }).then(event => {\r\n      dispatch({\r\n        type: TASK_TOGGLE,\r\n        payload: { id: id }\r\n      });\r\n    });\r\n  };\r\n\r\n  const onDelete = id => {\r\n    deleteRecord(id).then(event => {\r\n      dispatch({\r\n        type: TASK_REMOVED,\r\n        payload: { id: id }\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {tasks.length > 0 ? (\r\n        tasks.map(task => (\r\n          <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n        ))\r\n      ) : (\r\n        \"No Tasks to show\"\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks;\r\n","import AddTask from './AddTask';\r\nimport Tasks from './Tasks';\r\n\r\nconst Dash = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"header\">Todo App</h1>\r\n      <AddTask />\r\n      <Tasks />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dash;\r\n","import { Switch, Route, Redirect, HashRouter } from 'react-router-dom';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport SignIn from './components/SignIn';\r\nimport SignUp from './components/SignUp';\r\nimport Dash from './components/Dash';\r\n\r\nconst App = () => {\r\n  return (\r\n    <HashRouter>\r\n        <Switch>\r\n          <Route path=\"/login\" component={SignIn} />\r\n          <Route path=\"/signup\" component={SignUp} />\r\n          <PrivateRoute path=\"/app\" component={Dash} />\r\n          <Redirect from='/' to='/app' />\r\n        </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport todo from './todo';\r\n\r\nexport default combineReducers({todo});","import * as actions from \"../actions/actionType\";\r\n\r\nexport default function todoReducer(state = [], action) {\r\n  switch (action.type) {\r\n    case actions.TASK_ADDED:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n          desc: action.payload.desc,\r\n          status: false\r\n        }\r\n      ];\r\n    case actions.TASK_REMOVED:\r\n      return state.filter(task => task.id !== action.payload.id);\r\n    case actions.TASK_TOGGLE:\r\n      return state.map((task) => task.id === action.payload.id ? { ...task, status: !task.status } : task);\r\n    case actions.TASK_POPULATE:\r\n      return state.todo = action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store  = createStore(rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { DBConfig } from './DBConfig';\r\nimport { initDB } from 'react-indexed-db';\r\nimport './index.css';\r\nimport App from './App';\r\nimport AuthProvider from './contexts/AuthContext';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\ninitDB(DBConfig);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <AuthProvider>\r\n    <App />\r\n    </AuthProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","export const DBConfig = {\r\n  name: 'MyDB',\r\n  version: 1,\r\n  objectStoresMeta: [\r\n    {\r\n      store: 'people',\r\n      storeConfig: { keyPath: 'id', autoIncrement: true },\r\n      storeSchema: [\r\n        { name: 'name', keypath: 'name', options: { unique: true } },\r\n        { name: 'pass', keypath: 'pass', options: { unique: false } }\r\n      ]\r\n    },\r\n    {\r\n      store: 'task',\r\n      storeConfig: { keyPath: 'id', autoIncrement: true },\r\n      storeSchema: [\r\n        { name: 'peopleId', keypath: 'peopleId', options: { unique: false } },\r\n        { name: 'title', keypath: 'title', options: { unique: false } },\r\n        { name: 'desc', keypath: 'desc', options: { unique: false } },\r\n        { name: 'status', keypath: 'status', options: { unique: false } }\r\n      ]\r\n    }\r\n  ]\r\n};\r\n"],"sourceRoot":""}