{"version":3,"sources":["actions/actionType.js","contexts/AuthContext.js","components/PrivateRoute.js","components/SignIn.js","components/SignUp.js","components/Panel.js","App.js","reducers/index.js","reducers/todo.js","store.js","index.js","DBConfig.js"],"names":["TASK_ADDED","TASK_REMOVED","TASK_TOGGLE","TASK_POPULATE","authContext","createContext","AuthProvider","children","useState","loading","data","auth","setAuth","useEffect","JSON","parse","window","localStorage","getItem","setItem","stringify","Provider","value","setAuthData","PrivateRoute","Component","component","rest","useContext","render","routeProps","to","SignIn","history","userName","setuserName","password","setPassword","className","class","style","textAlign","onSubmit","e","preventDefault","replace","console","error","type","placeholder","onChange","target","href","SignUp","Panel","width","variant","onClick","App","path","from","combineReducers","todo","state","action","actions","id","payload","title","desc","status","filter","task","map","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","initDB","name","version","objectStoresMeta","storeConfig","keyPath","autoIncrement","storeSchema","keypath","options","unique","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c42e9f94.chunk.js","sourcesContent":["export const TASK_ADDED = 'todo/added';\r\nexport const TASK_REMOVED = 'todo/removed';\r\nexport const TASK_TOGGLE = 'todo/toggle';\r\nexport const TASK_POPULATE = 'todo/populate';\r\n","import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const authContext = createContext({});\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [auth, setAuth] = useState({ loading: true, data: null });\r\n\r\n  const setAuthData = (data) => {\r\n    setAuth({data: data});\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAuth({ loading: false, data: JSON.parse(window.localStorage.getItem('authData'))});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('authData', JSON.stringify(auth.data));\r\n  }, [auth.data]);\r\n\r\n  return (\r\n    <authContext.Provider value={{ auth, setAuthData }}>\r\n      {children}\r\n    </authContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authContext } from '../contexts/AuthContext';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { auth } = useContext(authContext);\r\n  const { loading } = auth;\r\n\r\n  if (loading) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() => {\r\n          return <p>Loading...</p>;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps => {\r\n        return auth.data ? (\r\n          <Component {...routeProps} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useContext, useState } from 'react';\r\nimport { authContext } from \"../contexts/AuthContext\";\r\n\r\nconst SignIn = ({ history }) => {\r\n  const [userName, setuserName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const { setAuthData } = useContext(authContext);\r\n\r\n  const onFormSubmit = e => {\r\n    e.preventDefault();\r\n    // fetch and check credentials\r\n    if (userName === 'admin' && password === 'test123') {\r\n      setAuthData(userName);\r\n      history.replace('/app');\r\n    } else {\r\n      console.error('Incorrect credectials')\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div class=\"add-form\">\r\n        <div class=\"form-control\">\r\n          <h1 style={{textAlign: \"center\"}} >Login</h1>\r\n          <form onSubmit={onFormSubmit}>\r\n            <label>Username</label>\r\n            <input type=\"text\" placeholder=\"Enter Username\"\r\n              onChange={e => {\r\n                setuserName(e.target.value);\r\n              }}\r\n            />\r\n            <label>Password</label>\r\n            <input type=\"password\" placeholder=\"Password\"\r\n              onChange={e => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n            <button type=\"submit\" className=\"btn btn-success\" >\r\n              Sign in\r\n              </button>\r\n          </form>\r\n        </div>\r\n        <a href=\"/signup\">Register</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useContext, useState } from 'react';\r\nimport { authContext } from \"../contexts/AuthContext\";\r\n\r\nconst SignUp = ({ history }) => {\r\n  const [userName, setuserName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const { setAuthData } = useContext(authContext);\r\n\r\n  const onFormSubmit = e => {\r\n    e.preventDefault();\r\n    // fetch and check credentials\r\n    if (userName === 'admin' && password === 'test123') {\r\n      setAuthData(userName);\r\n      history.replace('/app');\r\n    } else {\r\n      console.error('Incorrect credectials')\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div class=\"add-form\">\r\n        <div class=\"form-control\">\r\n          <h1  style={{textAlign: \"center\"}} >Register</h1>\r\n          <form onSubmit={onFormSubmit}>\r\n            <label>Username</label>\r\n            <input type=\"text\" placeholder=\"Enter Username\"\r\n              onChange={e => {\r\n                setuserName(e.target.value);\r\n              }}\r\n            />\r\n            <label>Password</label>\r\n            <input type=\"password\" placeholder=\"Password\"\r\n              onChange={e => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n            <button type=\"submit\" className=\"btn btn-success\" >\r\n              Sign Up\r\n              </button>\r\n          </form>\r\n        </div>\r\n        <a href=\"/signin\">Login</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useContext } from \"react\";\r\nimport { authContext } from \"../contexts/AuthContext\";\r\n\r\nconst Panel = () => {\r\n  const { setAuthData, auth } = useContext(authContext);\r\n  const onLogOut = () => {\r\n    setAuthData(null);\r\n  } //clearing the context\r\n  return (\r\n    <div>\r\n      <div style={{ width: 300 }}>\r\n        <h1 className=\"text-center\"> {`Hello, ${auth.data}`} </h1>\r\n        <button\r\n          variant=\"primary\"\r\n          type=\"button\"\r\n          className=\"w-100 mt-3\"\r\n          onClick={onLogOut}\r\n        >\r\n          Log out\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import AddTask from './components/AddTask';\r\nimport Tasks from './components/Tasks';\r\nimport { Switch, BrowserRouter, Route, Redirect } from 'react-router-dom';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport SignIn from './components/SignIn';\r\nimport SignUp from './components/SignUp';\r\nimport Panel from './components/Panel';\r\n\r\nconst App = () => {\r\n  return (\r\n    // <div className=\"container\">\r\n    //   <h1 className=\"header\">Todo App</h1>\r\n    //   <AddTask />\r\n    //   <Tasks />\r\n    // </div>\r\n    <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/login\" component={SignIn} />\r\n          <Route path=\"/signup\" component={SignUp} />\r\n          <PrivateRoute path=\"/app\" component={Panel} />\r\n          <Redirect from='/' to='/app' />\r\n        </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport todo from './todo';\r\n\r\nexport default combineReducers({todo});","import * as actions from \"../actions/actionType\";\r\n\r\nexport default function todoReducer(state = [], action) {\r\n  switch (action.type) {\r\n    case actions.TASK_ADDED:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n          desc: action.payload.desc,\r\n          status: false\r\n        }\r\n      ];\r\n    case actions.TASK_REMOVED:\r\n      return state.filter(task => task.id !== action.payload.id);\r\n    case actions.TASK_TOGGLE:\r\n      return state.map((task) => task.id === action.payload.id ? { ...task, status: !task.status } : task);\r\n    case actions.TASK_POPULATE:\r\n      return state.todo = action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store  = createStore(rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { DBConfig } from './DBConfig';\r\nimport { initDB } from 'react-indexed-db';\r\nimport './index.css';\r\nimport App from './App';\r\nimport AuthProvider from './contexts/AuthContext';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\ninitDB(DBConfig);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <AuthProvider>\r\n    <App />\r\n    </AuthProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","export const DBConfig = {\r\n  name: 'MyDB',\r\n  version: 1,\r\n  objectStoresMeta: [\r\n    {\r\n      store: 'people',\r\n      storeConfig: { keyPath: 'id', autoIncrement: true },\r\n      storeSchema: [\r\n        { name: 'name', keypath: 'name', options: { unique: false } },\r\n        { name: 'pass', keypath: 'pass', options: { unique: false } }\r\n      ]\r\n    },\r\n    {\r\n      store: 'task',\r\n      storeConfig: { keyPath: 'id', autoIncrement: true },\r\n      storeSchema: [\r\n        { name: 'peopleId', keypath: 'peopleId', options: { unique: false } },\r\n        { name: 'title', keypath: 'title', options: { unique: false } },\r\n        { name: 'desc', keypath: 'desc', options: { unique: false } },\r\n        { name: 'status', keypath: 'status', options: { unique: false } }\r\n      ]\r\n    }\r\n  ]\r\n};\r\n"],"sourceRoot":""}